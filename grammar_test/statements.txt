======
for statement
======

for (;;) {}
for ;; {}

---

(program
	(for_statement)
	(for_statement))

======
for in statement
======

for x in y {}
for x: Int in y {}

---

(program
	(for_in_statement (identifier) (identifier))
	(for_in_statement (identifier) (type (identifier)) (identifier)))


======
switch statement
======

switch x {
case _:
case let x:
case var y:
case ():
case is Int:
case _ as Int:
default:
}

---

(program
	(switch_statement (identifier)
		(case_statement (wildcard_pattern))
		(case_statement (value_binding_pattern (identifier)))
		(case_statement (value_binding_pattern (identifier)))
		(case_statement (tuple_pattern))
		(case_statement (is_pattern (type (identifier))))
		(case_statement (as_pattern (wildcard_pattern) (type (identifier))))
		(case_statement)))
